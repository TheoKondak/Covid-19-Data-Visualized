{"version":3,"sources":["components/Burgermenu/BurgerIcon.js","components/Countrylist/Countrylist.js","components/Burgermenu/Menu.js","components/Burgermenu/Burgermenu.js","components/Chart/Chart.js","components/Casecards/Casescard.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["open","props","className","key","Countrylist","onClick","click","countryName","Menu","clickEventHandler","countryId","countryData","close","id","this","countryList","map","country","Component","styles","fontFamily","textAlign","marginTop","contentStyle","background","width","border","Burgermenu","style","modal","overlayStyle","closeOnDocumentClick","trigger","BurgerIcon","Chart","type","label","data","options","Card","class","title","metrics","percentage","App","state","chartDataTotalCases","labels","datasets","backgroundColor","hidden","display","text","chartDataDeathsVsRecovered","chartDataActiveCasesLogarithmic","scales","yAxes","cardsData","totalCases","activeCases","deceased","discharged","newCases","percentageActiveCases","cardsChartsData","cardsChartsNewCases","cardsChartsActiveCases","cardsChartsDeaths","cardsChartsDischarged","changeCountryHandler","confirmedCases","deaths","recovered","activeCasesLogarithmic","cardsChartNewCases","cardsChartActiveCases","cardsChartDeaths","cardsChartRecovered","dataPosition","Object","entries","value","confirmed","date","setState","chartDataConfirmedCases","totalCasesWorldWide","activeCasesWorldWide","deceasedWordlWide","dischargedWorldWide","length","cardsChartsRecovered","xhr","XMLHttpRequest","responseType","onload","defaultCountry","response","China","countryListArray","itterator","push","send","console","log","align","src","logo","alt","legend","xAxes","elements","point","radius","tooltips","enabled","maintainAspectRatio","toFixed","data-toggle","data-placement","backgroundcolor","callbacks","tooltipItem","yLabel","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.b92a191b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default ({ open, ...props }) => (\r\n  <div className={open ? \"burger-menu open\" : \"burger-menu\"} {...props}>\r\n    <div className=\"bar1\" key=\"b1\" />\r\n    <div className=\"bar2\" key=\"b2\" />\r\n    <div className=\"bar3\" key=\"b3\" />\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './Countrylist.css';\r\n\r\n\r\nconst Countrylist = (props) => {\r\n    //  console.log(props.countryName)\r\n    return (\r\n        <div className='hexagon-container text-center '>\r\n\r\n<div className='hexagon'>\r\n            <button className='neomorphic uni'\r\n                onClick={props.click}>\r\n                {props.countryName}</button>\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Countrylist;\r\n","// import React from \"react\";\r\nimport React, { Component } from 'react';\r\nimport Countrylist from '../Countrylist/Countrylist';\r\n\r\nimport './Menu.css';\r\n\r\n\r\n// export default (props) =>{\r\nclass Menu extends Component {\r\n\r\n  clickEventHandler = (countryId, countryName, countryData) => {\r\n    this.props.click(countryId, countryName, countryData);\r\n    this.props.close();\r\n  }\r\n\r\n  render() {\r\n    return (<div className=\"menu clear\" id='grid'>\r\n\r\n    \r\n          {this.props.countryList.map(country => {\r\n\r\n            let countryId = [];\r\n            let countryName = [];\r\n            let countryData = [];\r\n\r\n            countryId = country.countryId;\r\n            countryName = country.countryName;\r\n            countryData = country.countryData;\r\n\r\n            return <Countrylist\r\n              key={country.countryId}\r\n              countryName={country.countryName}\r\n              click={() => { this.clickEventHandler(countryId, countryName, countryData); }}\r\n            />\r\n          })\r\n          }\r\n        </div>\r\n  \r\n    )\r\n  }\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\nimport Popup from \"reactjs-popup\";\r\nimport BurgerIcon from \"./BurgerIcon\";\r\nimport Menu from \"./Menu\";\r\nimport \"./Burgermenu.css\";\r\n\r\n\r\n\r\nconst styles = {\r\n  fontFamily: \"sans-serif\",\r\n  textAlign: \"center\",\r\n  marginTop: \"40px\"\r\n};\r\nconst contentStyle = {\r\n  background: \"rgba(41,55,55,0.1)\",\r\n  width: \"100vw\",\r\n  border: \"none\"\r\n};\r\n\r\n\r\nconst Burgermenu = (props) => {\r\n  return (\r\n    <div style={styles}>\r\n      <Popup\r\n        modal\r\n        overlayStyle={{ background: \"rgba(55,55,55,0.98\" }}\r\n        contentStyle={contentStyle}\r\n        closeOnDocumentClick={true}\r\n        trigger={open => <BurgerIcon open={open} />}\r\n      >\r\n        {close => <Menu\r\n          close={close}\r\n          countryList={props.countryList}\r\n          click={props.click}\r\n        />}\r\n      </Popup>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Burgermenu;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Line, Doughnut, Bar } from 'react-chartjs-2';\r\nimport \"./Chart.css\";\r\n\r\nclass Chart extends Component {\r\n\r\n  \r\n  render() {\r\n\r\n    if (this.props.type === 'Line')\r\n      return (\r\n        <div className=\"Line\">\r\n          <Line\r\n            label={this.props.label}\r\n            data={this.props.data}\r\n            options={this.props.options}\r\n          />\r\n        </div>\r\n      )\r\n\r\n    else if (this.props.type === 'Doughnut')\r\n      return (\r\n        <div className=\"Doughnut\">\r\n          <Doughnut\r\n            label={this.props.label}\r\n            data={this.props.data}\r\n            options={this.props.options}\r\n          />\r\n        </div>\r\n      )\r\n\r\n    else if (this.props.type === 'Bar')\r\n      return (\r\n        <div className=\"Bar\">\r\n          <Bar\r\n            label={this.props.label}\r\n            data={this.props.data}\r\n            options={this.props.options}\r\n          />\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport \"./Casescard.css\"\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst Card = (props) => {\r\n\r\n  \r\n\r\n    return (\r\n        <div className={props.class}>\r\n            <div className='containerTitle'>\r\n                <h3 className='cardTitle'>{props.title}</h3>\r\n            </div>\r\n\r\n            <div className='containerMetrics'>\r\n                <span className='cardMetrics'>{props.metrics}</span>\r\n                <div className='cardPercentage'>\r\n                    <span className='cardPercentage-percentage'>{props.percentage}</span>\r\n                    <span className='cardPercentage-text'> of total cases</span>\r\n                </div>\r\n            </div>\r\n\r\n<div className='containerMetricsChart'>\r\n            <Chart\r\n                type={props.type}\r\n               \r\n                \r\n                data={props.data}\r\n                options={props.options}\r\n            />\r\n</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { usePopper } from 'react-popper';\n\n// BurgerMenu\nimport Burgermenu from './components/Burgermenu/Burgermenu';\n\n// Components\nimport Chart from './components/Chart/Chart';\nimport Card from './components/Casecards/Casescard';\n\n\nclass App extends Component {\n  state = {\n\n    chartDataTotalCases: {\n\n      labels: [],\n\n      datasets: [\n        {\n          label: 'Confirmed Cases',\n          data: [],\n          backgroundColor: 'rgba(65,131,196,0.9)',\n          hidden: true\n        }],\n\n      options: {\n        title: {\n          display: true,\n          text: 'Confirmed Cases'\n        },\n      },\n    },\n\n    chartDataDeathsVsRecovered: {\n      labels: [],\n      datasets: [{\n        label: 'Confirmed Cases',\n        data: [],\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n      },\n\n      {\n        label: 'Deaths',\n        data: [],\n        backgroundColor: 'rgba(253, 179, 175, 0.8)',\n      },\n\n      {\n        label: 'Recovered',\n        data: [],\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n      }],\n\n      options: {\n        title: {\n          display: true,\n          text: 'Recoveries VS Deaths'\n        }\n      }\n    },\n\n    chartDataActiveCasesLogarithmic: {\n\n      labels: [],\n\n      datasets: [\n        {\n          label: 'Confirmed Cases',\n          data: [],\n          backgroundColor: 'rgba(65,131,196,0.4)',\n          hidden: false\n        }],\n\n      options: {\n        title: {\n          display: true,\n          text: 'Confirmed Cases'\n        },\n        scales: {\n          yAxes: [{\n            type: 'logarithmic'\n          }]\n        }\n      },\n    },\n\n    cardsData: {\n      totalCases: 0,\n      activeCases: 0,\n      deceased: 0,\n      discharged: 0,\n      newCases: 0,\n      percentageActiveCases: 0\n    },\n\n    cardsChartsData: {\n\n      cardsChartsNewCases: {\n        labels: '',\n        datasets: [\n          {\n            label: '',\n            data: [],\n            backgroundColor: 'rgba(220,53,69,0.9)'\n          }]\n      },\n\n      cardsChartsActiveCases: {\n        labels: '',\n        datasets: [\n          {\n            label: '',\n            data: [],\n            backgroundColor: 'rgba(220,53,69,0.9)'\n          }]\n      },\n\n      cardsChartsDeaths: {\n        labels: '',\n        datasets: [\n          {\n            label: '',\n            data: [],\n            backgroundColor: 'rgba(220,53,69,0.9)'\n          }]\n      },\n\n      cardsChartsDischarged: {\n        labels: '',\n        datasets: [\n          {\n            label: '',\n            data: [],\n            backgroundColor: 'rgba(220,53,69,0.9)'\n          }]\n      }\n\n    },\n\n    countryList: []\n  }\n\n\n\n  componentDidMount() {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', 'https://pomber.github.io/covid19/timeseries.json');\n    xhr.responseType = 'json';\n    xhr.onload = () => {\n\n      let defaultCountry = [...xhr.response.China];\n      let countryList = xhr.response;\n      let countryListArray = [];\n      let confirmedCases = [];\n      let activeCasesLogarithmic = [];\n      let deaths = [];\n      let recovered = [];\n      let labels = [];\n      let dataPosition = 0;\n      let cardChartConfirmed= [];\n      let cardsChartNewCases = [];\n      let cardsChartActiveCases = [];\n      let cardsChartDeaths = [];\n      let cardsChartRecovered = [];\n      let itterator = 0;\n\n      // Create Country List Object with ID, Country Name , Country Data\n      for (let countryName in countryList) {\n        countryListArray.push({ countryId: itterator, countryName: countryName, countryData: countryList[countryName] });\n        itterator++\n      }\n\n      // Fetched Data Calculations\n      // Calculate for Selected Country\n      for (let [key, value] of Object.entries(defaultCountry)) {\n        if (value.recovered !== 0 || value.deaths !== 0) { // Start Displaying Since the first Death OR the first recovered occured\n          confirmedCases[dataPosition] = value.confirmed;\n          deaths[dataPosition] = value.deaths;\n          recovered[dataPosition] = value.recovered;\n          labels[dataPosition] = value.date;\n\n          activeCasesLogarithmic[dataPosition] = value.confirmed - (value.deaths + value.recovered);\n          // Calculations for Charts for cards\n          cardChartConfirmed = confirmedCases[dataPosition] - confirmedCases[dataPosition - 1];\n          cardsChartNewCases[dataPosition] = confirmedCases[dataPosition] - confirmedCases[dataPosition - 1];\n          cardsChartActiveCases[dataPosition] = value.confirmed - (value.deaths + value.recovered);\n          cardsChartDeaths[dataPosition] = deaths[dataPosition] - deaths[dataPosition-1];\n          cardsChartRecovered[dataPosition] = recovered[dataPosition] - recovered[dataPosition-1];\n          dataPosition += 1;\n        }\n      }\n\n      this.setState({\n        //Set Default Country State\n        chartDataTotalCases: {\n\n          labels: labels,\n\n          datasets: [\n            {\n              label: 'Confirmed Cases',\n              data: confirmedCases,\n              backgroundColor: 'rgba(65,131,196,0.4)',\n              hidden: false\n            }],\n\n          options: {\n\n          }\n        },\n\n        chartDataDeathsVsRecovered: {\n\n          labels: labels,\n\n          datasets: [\n            {\n              label: 'Confirmed Cases',\n              data: confirmedCases,\n              backgroundColor: 'rgba(65,131,196,0.4)',\n              hidden: true\n            },\n\n            {\n              label: 'Deaths',\n              data: deaths,\n              // backgroundColor: backgroundColors,\n              backgroundColor: 'rgba(249, 54, 80, 0.2)'\n            },\n\n            {\n              label: 'Recovered',\n              data: recovered,\n              // backgroundColor: backgroundColors,\n              backgroundColor: 'rgba(249, 254, 239, 0.9)'\n            }\n\n          ],\n          options: {\n            title: {\n              display: true,\n              text: 'Recoveries VS Deaths'\n            },\n          },\n\n        },\n\n        chartDataActiveCasesLogarithmic: {\n\n          labels: labels,\n\n          datasets: [\n            {\n              label: 'Active Cases (Logarithmic)',\n              data: activeCasesLogarithmic,\n              backgroundColor: 'rgba(65,131,196,0.4)',\n              hidden: false\n            }],\n\n          options: {\n            title: {\n              display: true,\n              text: 'Confirmed Cases'\n            },\n            scales: {\n              yAxes: [{\n                type: 'logarithmic'\n              }]\n            }\n          },\n\n        },\n\n        cardsData: {\n          totalCasesWorldWide: 1,\n          activeCasesWorldWide: 1,\n          deceasedWordlWide: 1,\n          dischargedWorldWide: 1,\n          totalCases: confirmedCases[confirmedCases.length - 1],\n          activeCases: confirmedCases[confirmedCases.length - 1] - recovered[recovered.length - 1] - deaths[deaths.length - 1],\n          deceased: deaths[deaths.length - 1],\n          discharged: recovered[recovered.length - 1],\n          newCases: confirmedCases[confirmedCases.length - 1] - confirmedCases[confirmedCases.length - 2],\n          percentageActiveCases: 2\n        },\n\n        cardsChartsData: {\n\n          cardsChartsNewCases: {\n            labels: labels,\n            datasets: [\n              {\n                label: '',\n                data: cardsChartNewCases,\n                backgroundColor: 'rgba(220,53,69,0.9)'\n              }]\n          },\n\n          cardsChartsActiveCases: {\n            labels: labels,\n            datasets: [\n              {\n                label: '',\n                data: cardsChartActiveCases,\n                backgroundColor: 'rgba(220,53,69,0.9)'\n              }]\n          },\n          cardsChartsDeaths: {\n            labels: labels,\n            datasets: [\n              {\n                label: '',\n                data: cardsChartDeaths,\n                backgroundColor: 'rgba(220,53,69,0.9)'\n              }]\n          },\n    \n          cardsChartsRecovered: {\n            labels: labels,\n            datasets: [\n              {\n                label: '',\n                data: cardsChartRecovered,\n                backgroundColor: 'rgba(220,53,69,0.9)'\n              }]\n          }\n        },\n\n        countryName: 'USA',\n\n        countryList: countryListArray\n      })\n    };\n    xhr.send();\n  }\n\n  changeCountryHandler = (countryId, countryName, countryData) => {\n    let confirmedCases = [];\n    let activeCases = [];\n    let deaths = [];\n    let recovered = [];\n    let labels = [];\n    let  activeCasesLogarithmic = [];\n    let cardsChartNewCases = [];\n    let cardsChartActiveCases = [];\n    let cardsChartDeaths = [];\n    let cardsChartRecovered = [];\n    let dataPosition = 0;\n\n    // Fetched Data Calculations\n    // Calculate for Selected Country\n    for (let [key, value] of Object.entries(countryData)) {\n      confirmedCases[dataPosition] = value.confirmed;\n      deaths[dataPosition] = value.deaths;\n      recovered[dataPosition] = value.recovered;\n      labels[dataPosition] = value.date;\n\n      activeCasesLogarithmic[dataPosition] = value.confirmed - (value.deaths + value.recovered);\n      // Calculations for Charts for cards\n      cardsChartNewCases[dataPosition] = confirmedCases[dataPosition] - confirmedCases[dataPosition - 1];\n      cardsChartActiveCases[dataPosition] = value.confirmed - (value.deaths + value.recovered);;\n      cardsChartDeaths[dataPosition] = deaths[dataPosition] - deaths[dataPosition-1];\n      cardsChartRecovered[dataPosition] = recovered[dataPosition] - recovered[dataPosition-1]\n\n      dataPosition += 1;\n      // }\n    }\n\n\n\n    this.setState({\n\n      chartDataConfirmedCases: {\n\n        labels: labels,\n\n        datasets: [\n          {\n            label: 'Confirmed Cases',\n            data: confirmedCases,\n            backgroundColor: 'rgba(65,131,196,0.4)',\n            hidden: false\n          }],\n\n        options: {\n          title: {\n            display: true,\n            text: 'Confirmed Cases'\n          },\n        }\n      },\n\n      chartDataDeathsVsRecovered: {\n\n        labels: labels,\n\n        datasets: [\n          {\n            label: 'Confirmed Cases',\n            data: confirmedCases,\n            backgroundColor: 'rgba(65,131,196,0.4)',\n            hidden: true\n          },\n\n          {\n            label: 'Deaths',\n            data: deaths,\n            // backgroundColor: backgroundColors,\n            backgroundColor: 'rgba(249, 54, 80, 0.2)'\n          },\n\n          {\n            label: 'Recovered',\n            data: cardsChartRecovered,\n            // backgroundColor: backgroundColors,\n            backgroundColor: 'rgba(249, 254, 239, 0.9)'\n          }\n\n        ]\n\n      },\n\n      chartDataActiveCasesLogarithmic: {\n\n        labels: labels,\n\n        datasets: [\n          {\n            label: 'Active Cases (Logarithmic)',\n            data: activeCasesLogarithmic,\n            backgroundColor: 'rgba(65,131,196,0.4)',\n            hidden: false\n          }]\n\n      },\n\n      cardsData: {\n        totalCasesWorldWide: 1,\n        activeCasesWorldWide: 1,\n        deceasedWordlWide: 1,\n        dischargedWorldWide: 1,\n        totalCases: confirmedCases[confirmedCases.length - 1],\n        activeCases: confirmedCases[confirmedCases.length - 1] - recovered[recovered.length - 1] - deaths[deaths.length - 1],\n        deceased: deaths[deaths.length - 1],\n        discharged: recovered[recovered.length - 1],\n        newCases: confirmedCases[confirmedCases.length - 1] - confirmedCases[confirmedCases.length - 2],\n        percentageActiveCases: 2\n      },\n\n\n      cardsChartsData: {\n\n        cardsChartsNewCases: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'New Cases',\n              data: cardsChartNewCases,\n              backgroundColor: 'rgba(220,53,69,0.9)'\n            }]\n        },\n\n        cardsChartsActiveCases: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Active Cases',\n              data: cardsChartActiveCases,\n              backgroundColor: 'rgba(220,53,69,0.9)'\n            }]\n        },\n\n        cardsChartsDeaths: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Deaths',\n              data: cardsChartDeaths,\n              backgroundColor: 'rgba(220,53,69,0.9)'\n            }]\n        },\n  \n        cardsChartsRecovered: {\n          labels: labels,\n          datasets: [\n            {\n              label: 'Recovered',\n              data: cardsChartRecovered,\n              backgroundColor: 'rgba(220,53,69,0.9)'\n            }]\n        }\n\n      },\n\n      countryName: countryName\n    })\n\n  }\n\n  render() {\nconsole.log(this.state.chartDataActiveCasesLogarithmic);\n    return (\n      <div className=\"container-fluid app-container \">\n\n        {/* Header */}\n        <div className=\"row col-12 header mx-auto mb-5\" align=\"center\">\n\n          <div className='col-12 row'>\n            <div className='col-md-4 logo-container'>\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </div>\n            <div className='col-md-5 title'>\n              <h1>Covid-19 Data Visualized</h1>\n              <small>v0.03</small>\n            </div>\n          </div>\n        </div>\n\n        {/* Subheader */}\n        <div className='row subHeader'>\n          <div className='col mb-4 mt-4'>\n            <h3>{this.state.countryName}</h3>\n            <small>Last Update: {this.state.chartDataTotalCases.labels[this.state.chartDataTotalCases.labels.length - 1]}</small>\n          </div>\n        </div>\n\n\n\n        {/* Cards */}\n        <div className='row col-md-12 mx-auto mb-4 cardsContainer'>\n\n          <div className='col-lg-2 mb-2 cardContainer' >\n            <Card\n              title=\"Total Cases\"\n              metrics={this.state.cardsData.totalCases}\n              class=\"card totalCases\"\n\n              // Chart\n              type='Bar'\n              data={this.state.chartDataTotalCases}\n              options={{\n                legend: {\n                  display: false\n                },\n\n                scales: {\n                  xAxes: [{ display: false }],\n                  yAxes: [{ display: false }],\n                },\n\n                elements: {\n                  point: {\n                    radius: 1\n                  }\n                },\n\n                tooltips: {\n                  enabled: false,\n\n                },\n                maintainAspectRatio: false\n              }}\n\n            >  \n             </Card>\n          </div>\n\n          <div className='col-lg-2 mb-2 cardContainer' >\n            <Card\n              title=\"New Cases\"\n              metrics={this.state.cardsData.newCases}\n              percentage={(this.state.cardsData.newCases * 100 / this.state.cardsData.totalCases).toFixed(2)}\n              class=\"card newCases\"\n\n              // Chart\n              type='Bar'\n              labels='New Cases Card Chart'\n              data={this.state.cardsChartsData.cardsChartsNewCases}\n              options={{\n                legend: {\n                  display: false\n                },\n\n                scales: {\n                  xAxes: [{ display: false }],\n                  yAxes: [{ display: false }],\n                },\n\n                elements: {\n                  point: {\n                    radius: 0\n                  }\n                },\n\n                tooltips: {\n                  enabled: false,\n                },\n                maintainAspectRatio: false\n              }}\n            />\n          </div>\n\n          <div className='col-lg-2 mb-2 cardContainer'  data-toggle=\"tooltip\" data-placement=\"right\" title=\"Active Cases Diagram\">\n            <Card\n              title=\"Active Cases\"\n              metrics={this.state.cardsData.activeCases}\n              percentage={(this.state.cardsData.activeCases * 100 / this.state.cardsData.totalCases).toFixed(2)}\n              class=\"card activeCases\"\n\n              // Chart\n              type='Bar'\n              labels='Active Cases'\n              data={this.state.cardsChartsData.cardsChartsActiveCases}\n              options={{\n                legend: {\n                  display: false\n                },\n\n                scales: {\n                  xAxes: [{ display: false }],\n                  yAxes: [{ display: false }],\n                },\n\n                elements: {\n                  point: {\n                    radius: 0\n                  }\n                },\n\n                tooltips: {\n                  enabled: false,\n\n                },\n                maintainAspectRatio: false\n              }}\n            />\n      \n          </div>\n\n          <div className='col-lg-2 mb-2 cardContainer'>\n            <Card\n              title=\"Deceased\"\n              metrics={this.state.cardsData.deceased}\n              percentage={(this.state.cardsData.deceased * 100 / this.state.cardsData.totalCases).toFixed(2)}\n              class=\"card deceased\"\n\n              // Chart\n              type='Bar'\n              labels='Deaths'\n              data={this.state.cardsChartsData.cardsChartsDeaths}\n              options={{\n                legend: {\n                  display: false\n                },\n\n                scales: {\n                  xAxes: [{ display: false }],\n                  yAxes: [{ display: false }],\n                },\n\n                elements: {\n                  point: {\n                    radius: 0\n                  }\n                },\n\n                tooltips: {\n                  enabled: false,\n\n                },\n                maintainAspectRatio: false\n              }}\n\n            />\n          </div>\n\n          <div className='col-lg-2 mb-2 cardContainer'>\n            <Card\n              title=\"Discharged\"\n              metrics={this.state.cardsData.discharged}\n              percentage={((this.state.cardsData.discharged * 100 / this.state.cardsData.totalCases).toFixed(2))}\n              class=\"card discharged\"\n\n              // Chart\n              type='Bar'\n              labels='Discharged'\n              data={this.state.cardsChartsData.cardsChartsRecovered}\n              options={{\n                legend: {\n                  display: false\n                },\n\n                scales: {\n                  xAxes: [{ display: false }],\n                  yAxes: [{ display: false }],\n                },\n\n                elements: {\n                  point: {\n                    radius: 0\n                  }\n                },\n\n                tooltips: {\n                  enabled: false,\n\n                },\n                maintainAspectRatio: false\n              }}\n\n            />\n          </div>\n\n        </div>\n\n\n        {/* Charts */}\n        <div className='row m-0  chartsContainer'>\n\n          <div className='col-lg-6 p-1 chart'>\n            <Chart\n              type='Line'\n              backgroundcolor={this.state.chartDataTotalCases.datasets.backgroundColor}\n              label={this.state.chartDataTotalCases.datasets.label}\n              data={this.state.chartDataTotalCases}\n              options={{\n                legend: {\n                  title: {\n                    display: true,\n                    text: 'Recoveries VS Deaths'\n                  }\n                },\n\n                scales: {\n                  xAxes: [{ display: true }],\n                  yAxes: [{ display: true }],\n                },\n\n                tooltips: {\n\n                  enabled: true,\n\n                  callbacks: {\n                    label: function (tooltipItem) {\n                      return tooltipItem.yLabel;\n                    }\n                  }\n                },\n                maintainAspectRatio: false\n              }} />\n          </div>\n\n          <div className='col-lg-6 p-1 chart'>\n            <Chart\n              type='Line'\n              backgroundcolor={this.state.chartDataDeathsVsRecovered.datasets.backgroundColor}\n              label={this.state.chartDataDeathsVsRecovered.datasets.label}\n              data={this.state.chartDataDeathsVsRecovered}\n              options={{\n                legend: {\n                  title: {\n                    text: 'Recoveries VS Deaths',\n                    display: true\n                  }\n                },\n\n                scales: {\n                  xAxes: [{ display: true }],\n                  yAxes: [{ display: true }],\n                },\n\n                tooltips: {\n\n                  enabled: true,\n\n                  callbacks: {\n                    label: function (tooltipItem) {\n                      return tooltipItem.yLabel;\n                    }\n                  }\n                },\n                maintainAspectRatio: false\n              }} />\n          </div>\n\n        </div>\n\n\n        {/* Charts */}\n        <div className='row m-0 chartsContainer'>\n\n          <div className='col-lg-6 p-1 chart'>\n            <Chart\n              type='Line'\n              backgroundcolor={this.state.chartDataActiveCasesLogarithmic.datasets.backgroundColor}\n              label={this.state.chartDataActiveCasesLogarithmic.datasets.label}\n              data={this.state.chartDataActiveCasesLogarithmic}\n              options={this.state.chartDataActiveCasesLogarithmic.options} />\n          </div>\n\n          <div className='col-lg-6 p-1 chart' >\n            <Chart\n              type='Bar'\n              backgroundcolor={this.state.chartDataDeathsVsRecovered.datasets.backgroundColor}\n              label={this.state.chartDataDeathsVsRecovered.datasets.label}\n              data={this.state.chartDataDeathsVsRecovered}\n              options={{\n                legend: {\n                  title: {\n                    display: true,\n                    text: 'Recoveries VS Deaths'\n                  }\n                },\n\n                scales: {\n                  xAxes: [{ display: true }],\n                  yAxes: [{ display: true }],\n                },\n\n                tooltips: {\n\n                  enabled: true,\n\n                  callbacks: {\n                    label: function (tooltipItem) {\n                      return tooltipItem.yLabel;\n                    }\n                  }\n                },\n                maintainAspectRatio: false\n              }} />\n          </div>\n\n        </div>\n\n\n        {/* Burger Menu */}\n        <div className='cardContainer countryList'>\n          <Burgermenu\n            countryList={this.state.countryList}\n            click={this.changeCountryHandler}\n          />\n        </div>\n\n\n        {/* Footer */}\n        <div className='container footer'>\n          <div className='row'>\n            <hr className='col-10 footer-hr' />\n            <div className='col-12'>\n              <p>Find the code of the project on <a href='https://github.com/TheoKondak/covid-19-cata-visualized' target='_blank' rel=\"noopener noreferrer\" title='Find project on GitHub'>GitHub</a>\n              </p>\n              <p><a href='https://github.com/TheoKondak/Covid-19-Data-Visualized/blob/master/README.md' target='_blank' rel=\"noopener noreferrer\" >Changelog</a></p>\n              <p>This project is created with\n            <br />\n                <a href='https://github.com/facebook/create-react-app#readme' target='_blank' rel=\"noopener noreferrer\" title='React Chart js 2'>React</a>\n                <br />\n                <a href='https://github.com/jerairrest/react-chartjs-2' target='_blank' rel=\"noopener noreferrer\" title='React Chart js 2'>React Chart js 2</a>\n                <br />\n                <a href='https://github.com/yjose/reactjs-popup-burger-menu' target='_blank' rel=\"noopener noreferrer\" title='React JS popup burger menu'>React js popup burger menu</a>\n              </p>\n              <p>\n                Copyright 2020 Theodoros Kondakos. All rights reserved\n            <a href='https://github.com/TheoKondak/Covid-19-Data-Visualized/blob/master/LICENSE' target='_blank' rel='noopener noreferrer' title='Fight Covid-19 with Folding @home'> View Licence information</a>\n              </p>\n            </div>\n\n          </div>\n\n\n\n        </div>\n\n      </div> //App\n\n\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.76a6cc0d.png\";"],"sourceRoot":""}